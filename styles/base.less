@import "syntax-variables";
@import "hues";

atom-text-editor, :host {
	background-color: @syntax-background-color;
	color: @syntax-text-color;
	.gutter {
		background-color: @syntax-gutter-background-color;
		color: @syntax-gutter-text-color;

		.line-number {
			&.cursor-line {
				background-color: @syntax-gutter-background-color-selected;
				color: @syntax-gutter-text-color-selected;
			}
			&.cursor-line-no-selection {
				color: @syntax-gutter-text-color-selected;
			}
		}
	}
	.wrap-guide {
		color: @syntax-wrap-guide-color;
	}
	.invisible-character {
		color: @syntax-invisible-character-color;
	}
	.indent-guide {
		color: @syntax-indent-guide-color;
	}

	.search-results .marker .region {
		background-color: transparent;
		border: @syntax-result-marker-color;
	}

	.search-results .marker.current-result .region {
		border: @syntax-result-marker-color-selected;
	}
}

atom-text-editor.is-focused, :host(.is-focused) {
	.cursor {
		border-color: @syntax-cursor-color;
	}
	.selection .region {
		background-color: @syntax-selection-color;
	}
	.line.cursor-line, .line-number.cursor-line-no-selection {
		background-color: rgba(255,255,255,0.05);
	}
}

atom-text-editor, :host {
	@comment: hsl(@orange-hue, 11%, 50%);
	@string: hsl(@yellow-hue, 40%, 50%);
	@keyword: hsl(@red-hue, 75%, 58%);
	@constant: hsl(@purple-hue, 80%, 65%);
	@variable: hsl(@orange-hue, 80%, 70%);
	@function: hsl(@purple-hue, 70%, 70%);
	@class: hsl(@green-hue, 56%, 53%);
	@instance: hsl(@blue-hue, 56%, 53%);
	@name: hsl(@yellow-hue, 70%, 66%);

	@script: hsl(@cyan-hue, 56%, 56%);

	@html: hsl(@red-hue, 56%, 53%);
	@php: hsl(@blue-hue, 56%, 53%);
	@javascript: hsl(@blue-hue, 56%, 53%);
	@coffeescript: hsl(@brown-hue, 60%, 41%);
	@python: hsl(@green-hue, 86%, 38%);
	@ruby: hsl(@red-hue, 85%, 53%);

	.meta {
		&.tag {
			&.html {
				color: @html;
			}
			&.script {
				color: @javascript;
			}
		}
	}

	.html {
		.source {
			&.embedded {
				&.js {
					color: @javascript;
				}
			}
		}
	}
	.underline {
		border-bottom: 1px solid @syntax-invisible-character-color;
	}
	.comment {
		color: @comment;
		//Like so!

		.invalid {
			color: spin(@comment, -10);
		}
	}

	.string {
		color: @string;
		&.quoted {
			&.single {
				color: desaturate(@string, 10%);
			}
			&.double {
				color: saturate(@string, 10%);
			}
		}
		&.docinfo {
			&.doctype {
            &.DTD {
					color: @class;
				}
			}
		}
	}

	.constant {
		color: @constant;

		&.numeric {
			color: lighten(@constant, 10%);

			&.line-number.find-in-files:not(.match) {
				color: rgba(174, 129, 255, 0.63);
			}
		}

		&.language {
			color: saturate(@constant, 10%);
		}

		&.character {
			color: saturate(mix(@constant, @string, 70%),20%);
		}

		&.other {
			color: @constant;
		}
	}

	.variable {
		color: spin(@variable, -30);

		&.parameter {
			&.function {
				color: @variable;
			}
		}

		&.instance {
			color: spin(@variable, -10);
		}
	}

	.keyword {
		color: @keyword;
		&.unit {
			color: spin(saturate(@constant, 10%), 5);
		}
		&.operator {
			color: desaturate(@keyword, 30%);
			&.new {
				color: saturate(@keyword, 30%);
			}
		}
	}

	.storage {
		color: @keyword;
		&.type {
			color: spin(@keyword, 180);
		}
	}

	.support {
		&.function {
			color: @function;
		}
		&.property-name {
			color: @name;
		}
	}

	.entity {
		&.name {
			&.type {
				&.class {
					color: @class;
				}
				&.instance {
					color: @class;
					font-weight: bold;
				}
			}

			&.function {
				color: desaturate(@class, 30%);
			}
			&.tag {
				&.html {
					color: lighten(@html, 10%);
				}
				&.script {
					color: @script;
				}
			}
		}
		&.other {
			&.inherited-class {
				color: desaturate(@class, 20%);
			}
			&.attribute-name {
				&.html {
					color: lighten(spin(@html, 30), 10%);
				}
				&.class {
					color: mix(@class, @name, 50%);
					&.css {
						color: spin(mix(@class, @name, 50%), 120);
					}
				}
			}
		}
	}

	.punctuation {
		&.separator {
			&.key-value {
				&.html {
					color: lighten(@html, 5%);
				}
			}
		}
	}

	.source {
		&.gfm, &.markdown {
			.link {
				.entity {
					color: @class;
				}
			}
			.unordered.list {
				color: @variable;
			}
			.ordered.list {
				color: @constant;
			}
		}
	}

	.markup {
		&.heading {
			color: @string;
			&.heading-1 {
				font-weight: bold;
			}
		}
		&.link {
			color: @html;
		}
	}
}
